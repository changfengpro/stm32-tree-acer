ARM GAS  D:\msys64\tmp\ccYwQbcL.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_hal_timebase_tim.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/stm32f4xx_hal_timebase_tim.c"
  20              		.global	htim7
  21              		.section	.bss.htim7,"aw",%nobits
  22              		.align	2
  25              	htim7:
  26 0000 00000000 		.space	72
  26      00000000 
  26      00000000 
  26      00000000 
  26      00000000 
  27              		.section	.text.HAL_InitTick,"ax",%progbits
  28              		.align	1
  29              		.global	HAL_InitTick
  30              		.syntax unified
  31              		.thumb
  32              		.thumb_func
  34              	HAL_InitTick:
  35              	.LFB134:
   1:Core/Src/stm32f4xx_hal_timebase_tim.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_hal_timebase_tim.c **** /**
   3:Core/Src/stm32f4xx_hal_timebase_tim.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @file    stm32f4xx_hal_timebase_tim.c
   5:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @brief   HAL time base based on the hardware TIM.
   6:Core/Src/stm32f4xx_hal_timebase_tim.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @attention
   8:Core/Src/stm32f4xx_hal_timebase_tim.c ****   *
   9:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * All rights reserved.
  11:Core/Src/stm32f4xx_hal_timebase_tim.c ****   *
  12:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f4xx_hal_timebase_tim.c ****   *
  16:Core/Src/stm32f4xx_hal_timebase_tim.c ****   ******************************************************************************
  17:Core/Src/stm32f4xx_hal_timebase_tim.c ****   */
  18:Core/Src/stm32f4xx_hal_timebase_tim.c **** /* USER CODE END Header */
  19:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
  20:Core/Src/stm32f4xx_hal_timebase_tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f4xx_hal_timebase_tim.c **** #include "stm32f4xx_hal.h"
ARM GAS  D:\msys64\tmp\ccYwQbcL.s 			page 2


  22:Core/Src/stm32f4xx_hal_timebase_tim.c **** #include "stm32f4xx_hal_tim.h"
  23:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
  24:Core/Src/stm32f4xx_hal_timebase_tim.c **** /* Private typedef -----------------------------------------------------------*/
  25:Core/Src/stm32f4xx_hal_timebase_tim.c **** /* Private define ------------------------------------------------------------*/
  26:Core/Src/stm32f4xx_hal_timebase_tim.c **** /* Private macro -------------------------------------------------------------*/
  27:Core/Src/stm32f4xx_hal_timebase_tim.c **** /* Private variables ---------------------------------------------------------*/
  28:Core/Src/stm32f4xx_hal_timebase_tim.c **** TIM_HandleTypeDef        htim7;
  29:Core/Src/stm32f4xx_hal_timebase_tim.c **** /* Private function prototypes -----------------------------------------------*/
  30:Core/Src/stm32f4xx_hal_timebase_tim.c **** /* Private functions ---------------------------------------------------------*/
  31:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
  32:Core/Src/stm32f4xx_hal_timebase_tim.c **** /**
  33:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @brief  This function configures the TIM7 as a time base source.
  34:Core/Src/stm32f4xx_hal_timebase_tim.c ****   *         The time source is configured  to have 1ms time base with a dedicated
  35:Core/Src/stm32f4xx_hal_timebase_tim.c ****   *         Tick interrupt priority.
  36:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @note   This function is called  automatically at the beginning of program after
  37:Core/Src/stm32f4xx_hal_timebase_tim.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  38:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @param  TickPriority: Tick interrupt priority.
  39:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @retval HAL status
  40:Core/Src/stm32f4xx_hal_timebase_tim.c ****   */
  41:Core/Src/stm32f4xx_hal_timebase_tim.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  42:Core/Src/stm32f4xx_hal_timebase_tim.c **** {
  36              		.loc 1 42 1
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 56
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 80B5     		push	{r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 8EB0     		sub	sp, sp, #56
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 64
  48 0004 00AF     		add	r7, sp, #0
  49              	.LCFI2:
  50              		.cfi_def_cfa_register 7
  51 0006 7860     		str	r0, [r7, #4]
  43:Core/Src/stm32f4xx_hal_timebase_tim.c ****   RCC_ClkInitTypeDef    clkconfig;
  44:Core/Src/stm32f4xx_hal_timebase_tim.c ****   uint32_t              uwTimclock, uwAPB1Prescaler = 0U;
  52              		.loc 1 44 37
  53 0008 0023     		movs	r3, #0
  54 000a FB62     		str	r3, [r7, #44]
  45:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
  46:Core/Src/stm32f4xx_hal_timebase_tim.c ****   uint32_t              uwPrescalerValue = 0U;
  55              		.loc 1 46 25
  56 000c 0023     		movs	r3, #0
  57 000e BB62     		str	r3, [r7, #40]
  58              	.LBB2:
  47:Core/Src/stm32f4xx_hal_timebase_tim.c ****   uint32_t              pFLatency;
  48:Core/Src/stm32f4xx_hal_timebase_tim.c ****   HAL_StatusTypeDef     status;
  49:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
  50:Core/Src/stm32f4xx_hal_timebase_tim.c ****   /* Enable TIM7 clock */
  51:Core/Src/stm32f4xx_hal_timebase_tim.c ****   __HAL_RCC_TIM7_CLK_ENABLE();
  59              		.loc 1 51 3
  60 0010 0023     		movs	r3, #0
  61 0012 FB60     		str	r3, [r7, #12]
  62 0014 334B     		ldr	r3, .L7
ARM GAS  D:\msys64\tmp\ccYwQbcL.s 			page 3


  63 0016 1B6C     		ldr	r3, [r3, #64]
  64 0018 324A     		ldr	r2, .L7
  65 001a 43F02003 		orr	r3, r3, #32
  66 001e 1364     		str	r3, [r2, #64]
  67 0020 304B     		ldr	r3, .L7
  68 0022 1B6C     		ldr	r3, [r3, #64]
  69 0024 03F02003 		and	r3, r3, #32
  70 0028 FB60     		str	r3, [r7, #12]
  71 002a FB68     		ldr	r3, [r7, #12]
  72              	.LBE2:
  52:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
  53:Core/Src/stm32f4xx_hal_timebase_tim.c ****   /* Get clock configuration */
  54:Core/Src/stm32f4xx_hal_timebase_tim.c ****   HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
  73              		.loc 1 54 3
  74 002c 07F11002 		add	r2, r7, #16
  75 0030 07F11403 		add	r3, r7, #20
  76 0034 1146     		mov	r1, r2
  77 0036 1846     		mov	r0, r3
  78 0038 FFF7FEFF 		bl	HAL_RCC_GetClockConfig
  55:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
  56:Core/Src/stm32f4xx_hal_timebase_tim.c ****   /* Get APB1 prescaler */
  57:Core/Src/stm32f4xx_hal_timebase_tim.c ****   uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  79              		.loc 1 57 19
  80 003c 3B6A     		ldr	r3, [r7, #32]
  81 003e FB62     		str	r3, [r7, #44]
  58:Core/Src/stm32f4xx_hal_timebase_tim.c ****   /* Compute TIM7 clock */
  59:Core/Src/stm32f4xx_hal_timebase_tim.c ****   if (uwAPB1Prescaler == RCC_HCLK_DIV1)
  82              		.loc 1 59 6
  83 0040 FB6A     		ldr	r3, [r7, #44]
  84 0042 002B     		cmp	r3, #0
  85 0044 03D1     		bne	.L2
  60:Core/Src/stm32f4xx_hal_timebase_tim.c ****   {
  61:Core/Src/stm32f4xx_hal_timebase_tim.c ****     uwTimclock = HAL_RCC_GetPCLK1Freq();
  86              		.loc 1 61 18
  87 0046 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
  88 004a 7863     		str	r0, [r7, #52]
  89 004c 04E0     		b	.L3
  90              	.L2:
  62:Core/Src/stm32f4xx_hal_timebase_tim.c ****   }
  63:Core/Src/stm32f4xx_hal_timebase_tim.c ****   else
  64:Core/Src/stm32f4xx_hal_timebase_tim.c ****   {
  65:Core/Src/stm32f4xx_hal_timebase_tim.c ****     uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  91              		.loc 1 65 24
  92 004e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
  93 0052 0346     		mov	r3, r0
  94              		.loc 1 65 16 discriminator 1
  95 0054 5B00     		lsls	r3, r3, #1
  96 0056 7B63     		str	r3, [r7, #52]
  97              	.L3:
  66:Core/Src/stm32f4xx_hal_timebase_tim.c ****   }
  67:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
  68:Core/Src/stm32f4xx_hal_timebase_tim.c ****   /* Compute the prescaler value to have TIM7 counter clock equal to 1MHz */
  69:Core/Src/stm32f4xx_hal_timebase_tim.c ****   uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
  98              		.loc 1 69 46
  99 0058 7B6B     		ldr	r3, [r7, #52]
 100 005a 234A     		ldr	r2, .L7+4
 101 005c A2FB0323 		umull	r2, r3, r2, r3
ARM GAS  D:\msys64\tmp\ccYwQbcL.s 			page 4


 102 0060 9B0C     		lsrs	r3, r3, #18
 103              		.loc 1 69 20
 104 0062 013B     		subs	r3, r3, #1
 105 0064 BB62     		str	r3, [r7, #40]
  70:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
  71:Core/Src/stm32f4xx_hal_timebase_tim.c ****   /* Initialize TIM7 */
  72:Core/Src/stm32f4xx_hal_timebase_tim.c ****   htim7.Instance = TIM7;
 106              		.loc 1 72 18
 107 0066 214B     		ldr	r3, .L7+8
 108 0068 214A     		ldr	r2, .L7+12
 109 006a 1A60     		str	r2, [r3]
  73:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
  74:Core/Src/stm32f4xx_hal_timebase_tim.c ****   /* Initialize TIMx peripheral as follow:
  75:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
  76:Core/Src/stm32f4xx_hal_timebase_tim.c ****   + Period = [(TIM7CLK/1000) - 1]. to have a (1/1000) s time base.
  77:Core/Src/stm32f4xx_hal_timebase_tim.c ****   + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  78:Core/Src/stm32f4xx_hal_timebase_tim.c ****   + ClockDivision = 0
  79:Core/Src/stm32f4xx_hal_timebase_tim.c ****   + Counter direction = Up
  80:Core/Src/stm32f4xx_hal_timebase_tim.c ****   */
  81:Core/Src/stm32f4xx_hal_timebase_tim.c ****   htim7.Init.Period = (1000000U / 1000U) - 1U;
 110              		.loc 1 81 21
 111 006c 1F4B     		ldr	r3, .L7+8
 112 006e 40F2E732 		movw	r2, #999
 113 0072 DA60     		str	r2, [r3, #12]
  82:Core/Src/stm32f4xx_hal_timebase_tim.c ****   htim7.Init.Prescaler = uwPrescalerValue;
 114              		.loc 1 82 24
 115 0074 1D4A     		ldr	r2, .L7+8
 116 0076 BB6A     		ldr	r3, [r7, #40]
 117 0078 5360     		str	r3, [r2, #4]
  83:Core/Src/stm32f4xx_hal_timebase_tim.c ****   htim7.Init.ClockDivision = 0;
 118              		.loc 1 83 28
 119 007a 1C4B     		ldr	r3, .L7+8
 120 007c 0022     		movs	r2, #0
 121 007e 1A61     		str	r2, [r3, #16]
  84:Core/Src/stm32f4xx_hal_timebase_tim.c ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 122              		.loc 1 84 26
 123 0080 1A4B     		ldr	r3, .L7+8
 124 0082 0022     		movs	r2, #0
 125 0084 9A60     		str	r2, [r3, #8]
  85:Core/Src/stm32f4xx_hal_timebase_tim.c ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 126              		.loc 1 85 32
 127 0086 194B     		ldr	r3, .L7+8
 128 0088 0022     		movs	r2, #0
 129 008a 9A61     		str	r2, [r3, #24]
  86:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
  87:Core/Src/stm32f4xx_hal_timebase_tim.c ****   status = HAL_TIM_Base_Init(&htim7);
 130              		.loc 1 87 12
 131 008c 1748     		ldr	r0, .L7+8
 132 008e FFF7FEFF 		bl	HAL_TIM_Base_Init
 133 0092 0346     		mov	r3, r0
 134 0094 87F83330 		strb	r3, [r7, #51]
  88:Core/Src/stm32f4xx_hal_timebase_tim.c ****   if (status == HAL_OK)
 135              		.loc 1 88 6
 136 0098 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 137 009c 002B     		cmp	r3, #0
 138 009e 1BD1     		bne	.L4
  89:Core/Src/stm32f4xx_hal_timebase_tim.c ****   {
ARM GAS  D:\msys64\tmp\ccYwQbcL.s 			page 5


  90:Core/Src/stm32f4xx_hal_timebase_tim.c ****     /* Start the TIM time Base generation in interrupt mode */
  91:Core/Src/stm32f4xx_hal_timebase_tim.c ****     status = HAL_TIM_Base_Start_IT(&htim7);
 139              		.loc 1 91 14
 140 00a0 1248     		ldr	r0, .L7+8
 141 00a2 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 142 00a6 0346     		mov	r3, r0
 143 00a8 87F83330 		strb	r3, [r7, #51]
  92:Core/Src/stm32f4xx_hal_timebase_tim.c ****     if (status == HAL_OK)
 144              		.loc 1 92 8
 145 00ac 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 146 00b0 002B     		cmp	r3, #0
 147 00b2 11D1     		bne	.L4
  93:Core/Src/stm32f4xx_hal_timebase_tim.c ****     {
  94:Core/Src/stm32f4xx_hal_timebase_tim.c ****     /* Enable the TIM7 global Interrupt */
  95:Core/Src/stm32f4xx_hal_timebase_tim.c ****         HAL_NVIC_EnableIRQ(TIM7_IRQn);
 148              		.loc 1 95 9
 149 00b4 3720     		movs	r0, #55
 150 00b6 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  96:Core/Src/stm32f4xx_hal_timebase_tim.c ****       /* Configure the SysTick IRQ priority */
  97:Core/Src/stm32f4xx_hal_timebase_tim.c ****       if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 151              		.loc 1 97 10
 152 00ba 7B68     		ldr	r3, [r7, #4]
 153 00bc 0F2B     		cmp	r3, #15
 154 00be 08D8     		bhi	.L5
  98:Core/Src/stm32f4xx_hal_timebase_tim.c ****       {
  99:Core/Src/stm32f4xx_hal_timebase_tim.c ****         /* Configure the TIM IRQ priority */
 100:Core/Src/stm32f4xx_hal_timebase_tim.c ****         HAL_NVIC_SetPriority(TIM7_IRQn, TickPriority, 0U);
 155              		.loc 1 100 9
 156 00c0 0022     		movs	r2, #0
 157 00c2 7968     		ldr	r1, [r7, #4]
 158 00c4 3720     		movs	r0, #55
 159 00c6 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 101:Core/Src/stm32f4xx_hal_timebase_tim.c ****         uwTickPrio = TickPriority;
 160              		.loc 1 101 20
 161 00ca 0A4A     		ldr	r2, .L7+16
 162 00cc 7B68     		ldr	r3, [r7, #4]
 163 00ce 1360     		str	r3, [r2]
 164 00d0 02E0     		b	.L4
 165              	.L5:
 102:Core/Src/stm32f4xx_hal_timebase_tim.c ****       }
 103:Core/Src/stm32f4xx_hal_timebase_tim.c ****       else
 104:Core/Src/stm32f4xx_hal_timebase_tim.c ****       {
 105:Core/Src/stm32f4xx_hal_timebase_tim.c ****         status = HAL_ERROR;
 166              		.loc 1 105 16
 167 00d2 0123     		movs	r3, #1
 168 00d4 87F83330 		strb	r3, [r7, #51]
 169              	.L4:
 106:Core/Src/stm32f4xx_hal_timebase_tim.c ****       }
 107:Core/Src/stm32f4xx_hal_timebase_tim.c ****     }
 108:Core/Src/stm32f4xx_hal_timebase_tim.c ****   }
 109:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
 110:Core/Src/stm32f4xx_hal_timebase_tim.c ****  /* Return function status */
 111:Core/Src/stm32f4xx_hal_timebase_tim.c ****   return status;
 170              		.loc 1 111 10
 171 00d8 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 112:Core/Src/stm32f4xx_hal_timebase_tim.c **** }
 172              		.loc 1 112 1
ARM GAS  D:\msys64\tmp\ccYwQbcL.s 			page 6


 173 00dc 1846     		mov	r0, r3
 174 00de 3837     		adds	r7, r7, #56
 175              	.LCFI3:
 176              		.cfi_def_cfa_offset 8
 177 00e0 BD46     		mov	sp, r7
 178              	.LCFI4:
 179              		.cfi_def_cfa_register 13
 180              		@ sp needed
 181 00e2 80BD     		pop	{r7, pc}
 182              	.L8:
 183              		.align	2
 184              	.L7:
 185 00e4 00380240 		.word	1073887232
 186 00e8 83DE1B43 		.word	1125899907
 187 00ec 00000000 		.word	htim7
 188 00f0 00140040 		.word	1073746944
 189 00f4 00000000 		.word	uwTickPrio
 190              		.cfi_endproc
 191              	.LFE134:
 193              		.section	.text.HAL_SuspendTick,"ax",%progbits
 194              		.align	1
 195              		.global	HAL_SuspendTick
 196              		.syntax unified
 197              		.thumb
 198              		.thumb_func
 200              	HAL_SuspendTick:
 201              	.LFB135:
 113:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
 114:Core/Src/stm32f4xx_hal_timebase_tim.c **** /**
 115:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @brief  Suspend Tick increment.
 116:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @note   Disable the tick increment by disabling TIM7 update interrupt.
 117:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @param  None
 118:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @retval None
 119:Core/Src/stm32f4xx_hal_timebase_tim.c ****   */
 120:Core/Src/stm32f4xx_hal_timebase_tim.c **** void HAL_SuspendTick(void)
 121:Core/Src/stm32f4xx_hal_timebase_tim.c **** {
 202              		.loc 1 121 1
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 1, uses_anonymous_args = 0
 206              		@ link register save eliminated.
 207 0000 80B4     		push	{r7}
 208              	.LCFI5:
 209              		.cfi_def_cfa_offset 4
 210              		.cfi_offset 7, -4
 211 0002 00AF     		add	r7, sp, #0
 212              	.LCFI6:
 213              		.cfi_def_cfa_register 7
 122:Core/Src/stm32f4xx_hal_timebase_tim.c ****   /* Disable TIM7 update Interrupt */
 123:Core/Src/stm32f4xx_hal_timebase_tim.c ****   __HAL_TIM_DISABLE_IT(&htim7, TIM_IT_UPDATE);
 214              		.loc 1 123 3
 215 0004 064B     		ldr	r3, .L10
 216 0006 1B68     		ldr	r3, [r3]
 217 0008 DA68     		ldr	r2, [r3, #12]
 218 000a 054B     		ldr	r3, .L10
 219 000c 1B68     		ldr	r3, [r3]
 220 000e 22F00102 		bic	r2, r2, #1
ARM GAS  D:\msys64\tmp\ccYwQbcL.s 			page 7


 221 0012 DA60     		str	r2, [r3, #12]
 124:Core/Src/stm32f4xx_hal_timebase_tim.c **** }
 222              		.loc 1 124 1
 223 0014 00BF     		nop
 224 0016 BD46     		mov	sp, r7
 225              	.LCFI7:
 226              		.cfi_def_cfa_register 13
 227              		@ sp needed
 228 0018 5DF8047B 		ldr	r7, [sp], #4
 229              	.LCFI8:
 230              		.cfi_restore 7
 231              		.cfi_def_cfa_offset 0
 232 001c 7047     		bx	lr
 233              	.L11:
 234 001e 00BF     		.align	2
 235              	.L10:
 236 0020 00000000 		.word	htim7
 237              		.cfi_endproc
 238              	.LFE135:
 240              		.section	.text.HAL_ResumeTick,"ax",%progbits
 241              		.align	1
 242              		.global	HAL_ResumeTick
 243              		.syntax unified
 244              		.thumb
 245              		.thumb_func
 247              	HAL_ResumeTick:
 248              	.LFB136:
 125:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
 126:Core/Src/stm32f4xx_hal_timebase_tim.c **** /**
 127:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @brief  Resume Tick increment.
 128:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @note   Enable the tick increment by Enabling TIM7 update interrupt.
 129:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @param  None
 130:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @retval None
 131:Core/Src/stm32f4xx_hal_timebase_tim.c ****   */
 132:Core/Src/stm32f4xx_hal_timebase_tim.c **** void HAL_ResumeTick(void)
 133:Core/Src/stm32f4xx_hal_timebase_tim.c **** {
 249              		.loc 1 133 1
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 1, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 254 0000 80B4     		push	{r7}
 255              	.LCFI9:
 256              		.cfi_def_cfa_offset 4
 257              		.cfi_offset 7, -4
 258 0002 00AF     		add	r7, sp, #0
 259              	.LCFI10:
 260              		.cfi_def_cfa_register 7
 134:Core/Src/stm32f4xx_hal_timebase_tim.c ****   /* Enable TIM7 Update interrupt */
 135:Core/Src/stm32f4xx_hal_timebase_tim.c ****   __HAL_TIM_ENABLE_IT(&htim7, TIM_IT_UPDATE);
 261              		.loc 1 135 3
 262 0004 064B     		ldr	r3, .L13
 263 0006 1B68     		ldr	r3, [r3]
 264 0008 DA68     		ldr	r2, [r3, #12]
 265 000a 054B     		ldr	r3, .L13
 266 000c 1B68     		ldr	r3, [r3]
 267 000e 42F00102 		orr	r2, r2, #1
ARM GAS  D:\msys64\tmp\ccYwQbcL.s 			page 8


 268 0012 DA60     		str	r2, [r3, #12]
 136:Core/Src/stm32f4xx_hal_timebase_tim.c **** }
 269              		.loc 1 136 1
 270 0014 00BF     		nop
 271 0016 BD46     		mov	sp, r7
 272              	.LCFI11:
 273              		.cfi_def_cfa_register 13
 274              		@ sp needed
 275 0018 5DF8047B 		ldr	r7, [sp], #4
 276              	.LCFI12:
 277              		.cfi_restore 7
 278              		.cfi_def_cfa_offset 0
 279 001c 7047     		bx	lr
 280              	.L14:
 281 001e 00BF     		.align	2
 282              	.L13:
 283 0020 00000000 		.word	htim7
 284              		.cfi_endproc
 285              	.LFE136:
 287              		.text
 288              	.Letext0:
 289              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 290              		.file 3 "D:/msys64/mingw64/arm-none-eabi/include/machine/_default_types.h"
 291              		.file 4 "D:/msys64/mingw64/arm-none-eabi/include/sys/_stdint.h"
 292              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 293              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 294              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 295              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 296              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 297              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  D:\msys64\tmp\ccYwQbcL.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_timebase_tim.c
D:\msys64\tmp\ccYwQbcL.s:25     .bss.htim7:00000000 htim7
D:\msys64\tmp\ccYwQbcL.s:22     .bss.htim7:00000000 $d
D:\msys64\tmp\ccYwQbcL.s:28     .text.HAL_InitTick:00000000 $t
D:\msys64\tmp\ccYwQbcL.s:34     .text.HAL_InitTick:00000000 HAL_InitTick
D:\msys64\tmp\ccYwQbcL.s:185    .text.HAL_InitTick:000000e4 $d
D:\msys64\tmp\ccYwQbcL.s:194    .text.HAL_SuspendTick:00000000 $t
D:\msys64\tmp\ccYwQbcL.s:200    .text.HAL_SuspendTick:00000000 HAL_SuspendTick
D:\msys64\tmp\ccYwQbcL.s:236    .text.HAL_SuspendTick:00000020 $d
D:\msys64\tmp\ccYwQbcL.s:241    .text.HAL_ResumeTick:00000000 $t
D:\msys64\tmp\ccYwQbcL.s:247    .text.HAL_ResumeTick:00000000 HAL_ResumeTick
D:\msys64\tmp\ccYwQbcL.s:283    .text.HAL_ResumeTick:00000020 $d

UNDEFINED SYMBOLS
HAL_RCC_GetClockConfig
HAL_RCC_GetPCLK1Freq
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
HAL_NVIC_EnableIRQ
HAL_NVIC_SetPriority
uwTickPrio
