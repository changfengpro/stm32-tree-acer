ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"Bsp_can.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Bsp/Bsp_can.c"
  20              		.section	.text.can_user_init,"ax",%progbits
  21              		.align	1
  22              		.global	can_user_init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	can_user_init:
  28              	.LVL0:
  29              	.LFB134:
   1:Bsp/Bsp_can.c **** /*
   2:Bsp/Bsp_can.c ****  * Bsp_can.c
   3:Bsp/Bsp_can.c ****  *
   4:Bsp/Bsp_can.c ****  *  Created on: Jul 14, 2024
   5:Bsp/Bsp_can.c ****  *      Author: auroranebulas
   6:Bsp/Bsp_can.c ****  */
   7:Bsp/Bsp_can.c ****  
   8:Bsp/Bsp_can.c **** 
   9:Bsp/Bsp_can.c **** #include "Bsp_can.h"
  10:Bsp/Bsp_can.c **** #include "chassis_control.h"
  11:Bsp/Bsp_can.c **** #include "djimotor.h"
  12:Bsp/Bsp_can.c **** 
  13:Bsp/Bsp_can.c **** Motor_6025_Typedef motor_array[6] = { 0 }; //前四位为底盘，后两位为云台
  14:Bsp/Bsp_can.c **** moto_info_t motor_info[MOTOR_MAX_NUM];
  15:Bsp/Bsp_can.c **** uint32_t index_check;
  16:Bsp/Bsp_can.c **** extern slid_avg_filter_t Slid_filter[5];	//初始化滤波器示例
  17:Bsp/Bsp_can.c **** extern float Velocity[5];
  18:Bsp/Bsp_can.c **** extern float Last_Velocity[5];
  19:Bsp/Bsp_can.c **** float Velocity_Filter[5];
  20:Bsp/Bsp_can.c **** uint32_t count[3] = {0,0,0,0};
  21:Bsp/Bsp_can.c **** 
  22:Bsp/Bsp_can.c **** void can_user_init(CAN_HandleTypeDef* hcan )
  23:Bsp/Bsp_can.c **** {
  30              		.loc 1 23 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 40
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 23 1 is_stmt 0 view .LVU1
  35 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s 			page 2


  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 4, -16
  39              		.cfi_offset 5, -12
  40              		.cfi_offset 6, -8
  41              		.cfi_offset 14, -4
  42 0002 8AB0     		sub	sp, sp, #40
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 56
  24:Bsp/Bsp_can.c ****   CAN_FilterTypeDef  can_filter;
  45              		.loc 1 24 3 is_stmt 1 view .LVU2
  25:Bsp/Bsp_can.c **** 
  26:Bsp/Bsp_can.c ****   can_filter.FilterBank = 0;                       // filter 0
  46              		.loc 1 26 3 view .LVU3
  47              		.loc 1 26 25 is_stmt 0 view .LVU4
  48 0004 0023     		movs	r3, #0
  49 0006 0593     		str	r3, [sp, #20]
  27:Bsp/Bsp_can.c ****   can_filter.FilterMode =  CAN_FILTERMODE_IDMASK;  // mask mode
  50              		.loc 1 27 3 is_stmt 1 view .LVU5
  51              		.loc 1 27 25 is_stmt 0 view .LVU6
  52 0008 0693     		str	r3, [sp, #24]
  28:Bsp/Bsp_can.c ****   can_filter.FilterScale = CAN_FILTERSCALE_32BIT;
  53              		.loc 1 28 3 is_stmt 1 view .LVU7
  54              		.loc 1 28 26 is_stmt 0 view .LVU8
  55 000a 0124     		movs	r4, #1
  56 000c 0794     		str	r4, [sp, #28]
  29:Bsp/Bsp_can.c ****   can_filter.FilterIdHigh = 0;
  57              		.loc 1 29 3 is_stmt 1 view .LVU9
  58              		.loc 1 29 27 is_stmt 0 view .LVU10
  59 000e 0093     		str	r3, [sp]
  30:Bsp/Bsp_can.c ****   can_filter.FilterIdLow  = 0;
  60              		.loc 1 30 3 is_stmt 1 view .LVU11
  61              		.loc 1 30 27 is_stmt 0 view .LVU12
  62 0010 0193     		str	r3, [sp, #4]
  31:Bsp/Bsp_can.c ****   can_filter.FilterMaskIdHigh = 0;
  63              		.loc 1 31 3 is_stmt 1 view .LVU13
  64              		.loc 1 31 31 is_stmt 0 view .LVU14
  65 0012 0293     		str	r3, [sp, #8]
  32:Bsp/Bsp_can.c ****   can_filter.FilterMaskIdLow  = 0;                // set mask 0 to receive all can id
  66              		.loc 1 32 3 is_stmt 1 view .LVU15
  67              		.loc 1 32 31 is_stmt 0 view .LVU16
  68 0014 0393     		str	r3, [sp, #12]
  33:Bsp/Bsp_can.c ****   can_filter.FilterFIFOAssignment = CAN_RX_FIFO0; // assign to fifo0
  69              		.loc 1 33 3 is_stmt 1 view .LVU17
  70              		.loc 1 33 35 is_stmt 0 view .LVU18
  71 0016 0493     		str	r3, [sp, #16]
  34:Bsp/Bsp_can.c ****   can_filter.FilterActivation = ENABLE;           // enable can filter
  72              		.loc 1 34 3 is_stmt 1 view .LVU19
  73              		.loc 1 34 31 is_stmt 0 view .LVU20
  74 0018 0894     		str	r4, [sp, #32]
  35:Bsp/Bsp_can.c ****   can_filter.SlaveStartFilterBank  = 14;          // only meaningful in dual can mode
  75              		.loc 1 35 3 is_stmt 1 view .LVU21
  76              		.loc 1 35 36 is_stmt 0 view .LVU22
  77 001a 0E26     		movs	r6, #14
  78 001c 0996     		str	r6, [sp, #36]
  36:Bsp/Bsp_can.c ****   HAL_CAN_ConfigFilter(&hcan1, &can_filter);      // init can filter
  79              		.loc 1 36 3 is_stmt 1 view .LVU23
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s 			page 3


  80 001e 0E4D     		ldr	r5, .L3
  81 0020 6946     		mov	r1, sp
  82 0022 2846     		mov	r0, r5
  83              	.LVL1:
  84              		.loc 1 36 3 is_stmt 0 view .LVU24
  85 0024 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
  86              	.LVL2:
  37:Bsp/Bsp_can.c ****   HAL_CAN_Start(&hcan1);                          // start can1
  87              		.loc 1 37 3 is_stmt 1 view .LVU25
  88 0028 2846     		mov	r0, r5
  89 002a FFF7FEFF 		bl	HAL_CAN_Start
  90              	.LVL3:
  38:Bsp/Bsp_can.c **** 
  39:Bsp/Bsp_can.c ****   can_filter.FilterBank = 14;
  91              		.loc 1 39 3 view .LVU26
  92              		.loc 1 39 25 is_stmt 0 view .LVU27
  93 002e 0596     		str	r6, [sp, #20]
  40:Bsp/Bsp_can.c ****   can_filter.FilterFIFOAssignment = CAN_RX_FIFO1; // assign to fifo1
  94              		.loc 1 40 3 is_stmt 1 view .LVU28
  95              		.loc 1 40 35 is_stmt 0 view .LVU29
  96 0030 0494     		str	r4, [sp, #16]
  41:Bsp/Bsp_can.c ****   HAL_CAN_ConfigFilter(&hcan2, &can_filter);  
  97              		.loc 1 41 3 is_stmt 1 view .LVU30
  98 0032 0A4C     		ldr	r4, .L3+4
  99 0034 6946     		mov	r1, sp
 100 0036 2046     		mov	r0, r4
 101 0038 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 102              	.LVL4:
  42:Bsp/Bsp_can.c ****   HAL_CAN_Start(&hcan2);
 103              		.loc 1 42 3 view .LVU31
 104 003c 2046     		mov	r0, r4
 105 003e FFF7FEFF 		bl	HAL_CAN_Start
 106              	.LVL5:
  43:Bsp/Bsp_can.c ****   HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING); // enable can1 rx interrupt
 107              		.loc 1 43 3 view .LVU32
 108 0042 0221     		movs	r1, #2
 109 0044 2846     		mov	r0, r5
 110 0046 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 111              	.LVL6:
  44:Bsp/Bsp_can.c ****   HAL_CAN_ActivateNotification(&hcan2, CAN_IT_RX_FIFO1_MSG_PENDING); // enable can2 rx interrupt
 112              		.loc 1 44 3 view .LVU33
 113 004a 1021     		movs	r1, #16
 114 004c 2046     		mov	r0, r4
 115 004e FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 116              	.LVL7:
  45:Bsp/Bsp_can.c **** }
 117              		.loc 1 45 1 is_stmt 0 view .LVU34
 118 0052 0AB0     		add	sp, sp, #40
 119              	.LCFI2:
 120              		.cfi_def_cfa_offset 16
 121              		@ sp needed
 122 0054 70BD     		pop	{r4, r5, r6, pc}
 123              	.L4:
 124 0056 00BF     		.align	2
 125              	.L3:
 126 0058 00000000 		.word	hcan1
 127 005c 00000000 		.word	hcan2
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s 			page 4


 128              		.cfi_endproc
 129              	.LFE134:
 131              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 132              		.align	1
 133              		.global	HAL_CAN_RxFifo0MsgPendingCallback
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 138              	HAL_CAN_RxFifo0MsgPendingCallback:
 139              	.LVL8:
 140              	.LFB135:
  46:Bsp/Bsp_can.c **** 
  47:Bsp/Bsp_can.c **** 
  48:Bsp/Bsp_can.c **** 
  49:Bsp/Bsp_can.c **** 
  50:Bsp/Bsp_can.c **** // void Motor_CANFilterInit()
  51:Bsp/Bsp_can.c **** // {
  52:Bsp/Bsp_can.c **** // 	CAN_FilterTypeDef CAN_FilterInitStruct;
  53:Bsp/Bsp_can.c **** // 	CAN_FilterInitStruct.FilterActivation = ENABLE;
  54:Bsp/Bsp_can.c **** // 	CAN_FilterInitStruct.FilterMode = CAN_FILTERMODE_IDMASK;	//掩码模式
  55:Bsp/Bsp_can.c **** // 	CAN_FilterInitStruct.FilterScale = CAN_FILTERSCALE_32BIT;	//32位筛选器
  56:Bsp/Bsp_can.c **** // 	CAN_FilterInitStruct.FilterIdHigh = 0x0000;
  57:Bsp/Bsp_can.c **** // 	CAN_FilterInitStruct.FilterIdLow = 0x0000;
  58:Bsp/Bsp_can.c **** // 	CAN_FilterInitStruct.FilterMaskIdHigh = 0x0000;
  59:Bsp/Bsp_can.c **** // 	CAN_FilterInitStruct.FilterMaskIdLow = 0x0000;
  60:Bsp/Bsp_can.c **** // 	CAN_FilterInitStruct.FilterBank = 0;
  61:Bsp/Bsp_can.c **** // 	CAN_FilterInitStruct.FilterFIFOAssignment = CAN_FILTER_FIFO0;
  62:Bsp/Bsp_can.c **** // 	CAN_FilterInitStruct.SlaveStartFilterBank = 14;
  63:Bsp/Bsp_can.c **** 
  64:Bsp/Bsp_can.c **** // 	HAL_CAN_ConfigFilter(&hcan1, &CAN_FilterInitStruct);
  65:Bsp/Bsp_can.c **** // 	HAL_CAN_Start(&hcan1);
  66:Bsp/Bsp_can.c **** // 	__HAL_CAN_ENABLE_IT(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING);
  67:Bsp/Bsp_can.c **** 
  68:Bsp/Bsp_can.c **** // 	//HAL_UART_Transmit_IT(&huart1, &type, sizeof(type));
  69:Bsp/Bsp_can.c **** 
  70:Bsp/Bsp_can.c **** 
  71:Bsp/Bsp_can.c **** // 	CAN_FilterInitStruct.FilterBank = 14;
  72:Bsp/Bsp_can.c **** // 	CAN_FilterInitStruct.FilterFIFOAssignment = CAN_FILTER_FIFO1;//之后测试FIFO0，测试从接
  73:Bsp/Bsp_can.c **** 
  74:Bsp/Bsp_can.c **** // 	HAL_CAN_ConfigFilter(&hcan2, &CAN_FilterInitStruct);
  75:Bsp/Bsp_can.c **** // 	//HAL_UART_Transmit_IT(&huart1, &type, sizeof(type));
  76:Bsp/Bsp_can.c **** // 	HAL_CAN_Start(&hcan2);
  77:Bsp/Bsp_can.c **** // 	__HAL_CAN_ENABLE_IT(&hcan2, CAN_IT_RX_FIFO1_MSG_PENDING);
  78:Bsp/Bsp_can.c **** 
  79:Bsp/Bsp_can.c **** // }
  80:Bsp/Bsp_can.c **** 
  81:Bsp/Bsp_can.c **** 
  82:Bsp/Bsp_can.c **** 
  83:Bsp/Bsp_can.c **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan)
  84:Bsp/Bsp_can.c **** {
 141              		.loc 1 84 1 is_stmt 1 view -0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 40
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		.loc 1 84 1 is_stmt 0 view .LVU36
 146 0000 30B5     		push	{r4, r5, lr}
 147              	.LCFI3:
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s 			page 5


 148              		.cfi_def_cfa_offset 12
 149              		.cfi_offset 4, -12
 150              		.cfi_offset 5, -8
 151              		.cfi_offset 14, -4
 152 0002 8BB0     		sub	sp, sp, #44
 153              	.LCFI4:
 154              		.cfi_def_cfa_offset 56
 155 0004 0024     		movs	r4, #0
  85:Bsp/Bsp_can.c ****   CAN_RxHeaderTypeDef rx_header;
 156              		.loc 1 85 3 is_stmt 1 view .LVU37
  86:Bsp/Bsp_can.c ****   uint8_t             rx_data[8];
 157              		.loc 1 86 3 view .LVU38
  87:Bsp/Bsp_can.c ****   uint8_t index;
 158              		.loc 1 87 3 view .LVU39
  88:Bsp/Bsp_can.c ****   // if(hcan->Instance == CAN1)
  89:Bsp/Bsp_can.c ****   // {
  90:Bsp/Bsp_can.c ****   HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &rx_header, rx_data); //receive can data
 159              		.loc 1 90 3 view .LVU40
 160 0006 01AB     		add	r3, sp, #4
 161 0008 03AA     		add	r2, sp, #12
 162 000a 2146     		mov	r1, r4
 163 000c FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 164              	.LVL9:
  91:Bsp/Bsp_can.c ****   // }
  92:Bsp/Bsp_can.c ****   if ((rx_header.StdId >= MOTOR_3508_FEEDBACK_ID_BASE)
 165              		.loc 1 92 3 view .LVU41
 166              		.loc 1 92 17 is_stmt 0 view .LVU42
 167 0010 039B     		ldr	r3, [sp, #12]
  93:Bsp/Bsp_can.c ****    && (rx_header.StdId <  MOTOR_3508_FEEDBACK_ID_BASE + MOTOR_CHASSIS_MAX_NUM + MOTOR_GIMBAL_MAX_NU
 168              		.loc 1 93 4 view .LVU43
 169 0012 A3F50072 		sub	r2, r3, #512
  92:Bsp/Bsp_can.c ****    && (rx_header.StdId <  MOTOR_3508_FEEDBACK_ID_BASE + MOTOR_CHASSIS_MAX_NUM + MOTOR_GIMBAL_MAX_NU
 170              		.loc 1 92 6 view .LVU44
 171 0016 052A     		cmp	r2, #5
 172 0018 24D8     		bhi	.L6
  94:Bsp/Bsp_can.c ****   {
  95:Bsp/Bsp_can.c **** 
  96:Bsp/Bsp_can.c **** 	  index=rx_header.StdId - MOTOR_3508_FEEDBACK_ID_BASE;                  // get motor index by can_
 173              		.loc 1 96 4 is_stmt 1 view .LVU45
 174              		.loc 1 96 9 is_stmt 0 view .LVU46
 175 001a DCB2     		uxtb	r4, r3
 176              	.LVL10:
  97:Bsp/Bsp_can.c ****     motor_array[index].angle    = ((rx_data[0] << 8) | rx_data[1]);
 177              		.loc 1 97 5 is_stmt 1 view .LVU47
 178              		.loc 1 97 44 is_stmt 0 view .LVU48
 179 001c 9DF80410 		ldrb	r1, [sp, #4]	@ zero_extendqisi2
 180              		.loc 1 97 63 view .LVU49
 181 0020 9DF80500 		ldrb	r0, [sp, #5]	@ zero_extendqisi2
 182              		.loc 1 97 54 view .LVU50
 183 0024 40EA0120 		orr	r0, r0, r1, lsl #8
 184              		.loc 1 97 33 view .LVU51
 185 0028 2F49     		ldr	r1, .L11
 186 002a 04EB440E 		add	lr, r4, r4, lsl #1
 187 002e 01EB8E0C 		add	ip, r1, lr, lsl #2
 188 0032 21F82E00 		strh	r0, [r1, lr, lsl #2]	@ movhi
  98:Bsp/Bsp_can.c ****     motor_array[index].current_get    = ((rx_data[2] << 8) | rx_data[3]);
 189              		.loc 1 98 5 is_stmt 1 view .LVU52
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s 			page 6


 190              		.loc 1 98 50 is_stmt 0 view .LVU53
 191 0036 9DF806E0 		ldrb	lr, [sp, #6]	@ zero_extendqisi2
 192              		.loc 1 98 69 view .LVU54
 193 003a 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 194              		.loc 1 98 60 view .LVU55
 195 003e 40EA0E20 		orr	r0, r0, lr, lsl #8
 196              		.loc 1 98 39 view .LVU56
 197 0042 ACF80400 		strh	r0, [ip, #4]	@ movhi
  99:Bsp/Bsp_can.c ****     motor_array[index].current_set = ((rx_data[4] << 8) | rx_data[5]);
 198              		.loc 1 99 5 is_stmt 1 view .LVU57
 199              		.loc 1 99 47 is_stmt 0 view .LVU58
 200 0046 9DF808E0 		ldrb	lr, [sp, #8]	@ zero_extendqisi2
 201              		.loc 1 99 66 view .LVU59
 202 004a 9DF80900 		ldrb	r0, [sp, #9]	@ zero_extendqisi2
 203              		.loc 1 99 57 view .LVU60
 204 004e 40EA0E20 		orr	r0, r0, lr, lsl #8
 205              		.loc 1 99 36 view .LVU61
 206 0052 ACF80600 		strh	r0, [ip, #6]	@ movhi
 100:Bsp/Bsp_can.c ****     motor_array[index].hall           =   rx_data[6];
 207              		.loc 1 100 5 is_stmt 1 view .LVU62
 208              		.loc 1 100 50 is_stmt 0 view .LVU63
 209 0056 9DF80A00 		ldrb	r0, [sp, #10]	@ zero_extendqisi2
 210              		.loc 1 100 39 view .LVU64
 211 005a 04EB440C 		add	ip, r4, r4, lsl #1
 212 005e 01EB8C01 		add	r1, r1, ip, lsl #2
 213 0062 0872     		strb	r0, [r1, #8]
 214              	.LVL11:
 215              	.L6:
 101:Bsp/Bsp_can.c ****     
 102:Bsp/Bsp_can.c ****   }
 103:Bsp/Bsp_can.c **** 
 104:Bsp/Bsp_can.c ****   if ((rx_header.StdId >= MOTOR_3508_FEEDBACK_ID_BASE)
 216              		.loc 1 104 3 is_stmt 1 view .LVU65
 217              		.loc 1 104 6 is_stmt 0 view .LVU66
 218 0064 082A     		cmp	r2, #8
 219 0066 21D8     		bhi	.L7
 220              	.LBB2:
 105:Bsp/Bsp_can.c ****    && (rx_header.StdId <  MOTOR_3508_FEEDBACK_ID_BASE + MOTOR_MAX_NUM))                  // judge t
 106:Bsp/Bsp_can.c ****   {
 107:Bsp/Bsp_can.c ****     uint8_t index = rx_header.StdId - MOTOR_3508_FEEDBACK_ID_BASE;                  // get motor in
 221              		.loc 1 107 5 is_stmt 1 view .LVU67
 222              	.LVL12:
 108:Bsp/Bsp_can.c ****     motor_info[index].rotor_angle    = ((rx_data[0] << 8) | rx_data[1]);
 223              		.loc 1 108 5 view .LVU68
 224              		.loc 1 108 49 is_stmt 0 view .LVU69
 225 0068 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 226              		.loc 1 108 68 view .LVU70
 227 006c 9DF80500 		ldrb	r0, [sp, #5]	@ zero_extendqisi2
 228              		.loc 1 108 22 view .LVU71
 229 0070 DBB2     		uxtb	r3, r3
 230              		.loc 1 108 59 view .LVU72
 231 0072 40EA0220 		orr	r0, r0, r2, lsl #8
 232              		.loc 1 108 38 view .LVU73
 233 0076 1D49     		ldr	r1, .L11+4
 234 0078 03EB4302 		add	r2, r3, r3, lsl #1
 235 007c 01EB8202 		add	r2, r1, r2, lsl #2
 236 0080 9080     		strh	r0, [r2, #4]	@ movhi
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s 			page 7


 109:Bsp/Bsp_can.c ****     motor_info[index].rotor_speed    = ((rx_data[2] << 8) | rx_data[3]);
 237              		.loc 1 109 5 is_stmt 1 view .LVU74
 238              		.loc 1 109 49 is_stmt 0 view .LVU75
 239 0082 9DF806C0 		ldrb	ip, [sp, #6]	@ zero_extendqisi2
 240              		.loc 1 109 68 view .LVU76
 241 0086 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 242              		.loc 1 109 59 view .LVU77
 243 008a 40EA0C20 		orr	r0, r0, ip, lsl #8
 244              		.loc 1 109 38 view .LVU78
 245 008e D080     		strh	r0, [r2, #6]	@ movhi
 110:Bsp/Bsp_can.c ****     motor_info[index].torque_current = ((rx_data[4] << 8) | rx_data[5]);
 246              		.loc 1 110 5 is_stmt 1 view .LVU79
 247              		.loc 1 110 49 is_stmt 0 view .LVU80
 248 0090 9DF808C0 		ldrb	ip, [sp, #8]	@ zero_extendqisi2
 249              		.loc 1 110 68 view .LVU81
 250 0094 9DF80900 		ldrb	r0, [sp, #9]	@ zero_extendqisi2
 251              		.loc 1 110 59 view .LVU82
 252 0098 40EA0C20 		orr	r0, r0, ip, lsl #8
 253              		.loc 1 110 38 view .LVU83
 254 009c 1081     		strh	r0, [r2, #8]	@ movhi
 111:Bsp/Bsp_can.c ****     motor_info[index].temp           =   rx_data[6];
 255              		.loc 1 111 5 is_stmt 1 view .LVU84
 256              		.loc 1 111 49 is_stmt 0 view .LVU85
 257 009e 9DF80A20 		ldrb	r2, [sp, #10]	@ zero_extendqisi2
 258              		.loc 1 111 38 view .LVU86
 259 00a2 03EB4303 		add	r3, r3, r3, lsl #1
 260              	.LVL13:
 261              		.loc 1 111 38 view .LVU87
 262 00a6 01EB8301 		add	r1, r1, r3, lsl #2
 263 00aa 8A72     		strb	r2, [r1, #10]
 264              	.LVL14:
 265              	.L7:
 266              		.loc 1 111 38 view .LVU88
 267              	.LBE2:
 112:Bsp/Bsp_can.c ****   }
 113:Bsp/Bsp_can.c **** 
 114:Bsp/Bsp_can.c ****   index_check = index;
 268              		.loc 1 114 3 is_stmt 1 view .LVU89
 269              		.loc 1 114 15 is_stmt 0 view .LVU90
 270 00ac 104B     		ldr	r3, .L11+8
 271 00ae 1C60     		str	r4, [r3]
 115:Bsp/Bsp_can.c **** 
 116:Bsp/Bsp_can.c ****   if(index > 0 && index < 5)
 272              		.loc 1 116 3 is_stmt 1 view .LVU91
 273              		.loc 1 116 16 is_stmt 0 view .LVU92
 274 00b0 631E     		subs	r3, r4, #1
 275 00b2 DBB2     		uxtb	r3, r3
 276              		.loc 1 116 5 view .LVU93
 277 00b4 032B     		cmp	r3, #3
 278 00b6 01D9     		bls	.L10
 279              	.LVL15:
 280              	.L5:
 117:Bsp/Bsp_can.c ****   {
 118:Bsp/Bsp_can.c **** 	  Velocity_Calclate(index);
 119:Bsp/Bsp_can.c ****     Velocity_Filter[index] = Slid_avg_filter(&Slid_filter[index], Velocity[index]);
 120:Bsp/Bsp_can.c **** 
 121:Bsp/Bsp_can.c ****   }
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s 			page 8


 122:Bsp/Bsp_can.c **** 
 123:Bsp/Bsp_can.c **** 
 124:Bsp/Bsp_can.c **** }
 281              		.loc 1 124 1 view .LVU94
 282 00b8 0BB0     		add	sp, sp, #44
 283              	.LCFI5:
 284              		.cfi_remember_state
 285              		.cfi_def_cfa_offset 12
 286              		@ sp needed
 287 00ba 30BD     		pop	{r4, r5, pc}
 288              	.LVL16:
 289              	.L10:
 290              	.LCFI6:
 291              		.cfi_restore_state
 118:Bsp/Bsp_can.c ****     Velocity_Filter[index] = Slid_avg_filter(&Slid_filter[index], Velocity[index]);
 292              		.loc 1 118 4 is_stmt 1 view .LVU95
 293 00bc 2046     		mov	r0, r4
 294 00be FFF7FEFF 		bl	Velocity_Calclate
 295              	.LVL17:
 119:Bsp/Bsp_can.c **** 
 296              		.loc 1 119 5 view .LVU96
 119:Bsp/Bsp_can.c **** 
 297              		.loc 1 119 30 is_stmt 0 view .LVU97
 298 00c2 A500     		lsls	r5, r4, #2
 299 00c4 0B4B     		ldr	r3, .L11+12
 300 00c6 03EB8403 		add	r3, r3, r4, lsl #2
 301 00ca 04EB4404 		add	r4, r4, r4, lsl #1
 302              	.LVL18:
 119:Bsp/Bsp_can.c **** 
 303              		.loc 1 119 30 view .LVU98
 304 00ce 93ED000A 		vldr.32	s0, [r3]
 305 00d2 0948     		ldr	r0, .L11+16
 306 00d4 00EBC400 		add	r0, r0, r4, lsl #3
 307 00d8 FFF7FEFF 		bl	Slid_avg_filter
 308              	.LVL19:
 119:Bsp/Bsp_can.c **** 
 309              		.loc 1 119 28 view .LVU99
 310 00dc 074B     		ldr	r3, .L11+20
 311 00de 2B44     		add	r3, r3, r5
 312 00e0 83ED000A 		vstr.32	s0, [r3]
 313              		.loc 1 124 1 view .LVU100
 314 00e4 E8E7     		b	.L5
 315              	.L12:
 316 00e6 00BF     		.align	2
 317              	.L11:
 318 00e8 00000000 		.word	motor_array
 319 00ec 00000000 		.word	motor_info
 320 00f0 00000000 		.word	index_check
 321 00f4 00000000 		.word	Velocity
 322 00f8 00000000 		.word	Slid_filter
 323 00fc 00000000 		.word	Velocity_Filter
 324              		.cfi_endproc
 325              	.LFE135:
 327              		.section	.text.HAL_CAN_RxFifo1MsgPendingCallback,"ax",%progbits
 328              		.align	1
 329              		.global	HAL_CAN_RxFifo1MsgPendingCallback
 330              		.syntax unified
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s 			page 9


 331              		.thumb
 332              		.thumb_func
 334              	HAL_CAN_RxFifo1MsgPendingCallback:
 335              	.LVL20:
 336              	.LFB136:
 125:Bsp/Bsp_can.c **** 
 126:Bsp/Bsp_can.c **** 
 127:Bsp/Bsp_can.c **** void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan)
 128:Bsp/Bsp_can.c **** {
 337              		.loc 1 128 1 is_stmt 1 view -0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 40
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 341              		.loc 1 128 1 is_stmt 0 view .LVU102
 342 0000 30B5     		push	{r4, r5, lr}
 343              	.LCFI7:
 344              		.cfi_def_cfa_offset 12
 345              		.cfi_offset 4, -12
 346              		.cfi_offset 5, -8
 347              		.cfi_offset 14, -4
 348 0002 8BB0     		sub	sp, sp, #44
 349              	.LCFI8:
 350              		.cfi_def_cfa_offset 56
 351 0004 0024     		movs	r4, #0
 129:Bsp/Bsp_can.c ****   CAN_RxHeaderTypeDef rx_header;
 352              		.loc 1 129 3 is_stmt 1 view .LVU103
 130:Bsp/Bsp_can.c ****   uint8_t             rx_data[8];
 353              		.loc 1 130 3 view .LVU104
 131:Bsp/Bsp_can.c ****   uint8_t index;
 354              		.loc 1 131 3 view .LVU105
 132:Bsp/Bsp_can.c **** 
 133:Bsp/Bsp_can.c **** 
 134:Bsp/Bsp_can.c ****   // if(hcan->Instance == CAN2)
 135:Bsp/Bsp_can.c ****   // {
 136:Bsp/Bsp_can.c ****      HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO1, &rx_header, rx_data); //receive can data
 355              		.loc 1 136 6 view .LVU106
 356 0006 01AB     		add	r3, sp, #4
 357 0008 03AA     		add	r2, sp, #12
 358 000a 0121     		movs	r1, #1
 359 000c FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 360              	.LVL21:
 137:Bsp/Bsp_can.c ****   // }
 138:Bsp/Bsp_can.c **** 
 139:Bsp/Bsp_can.c **** 
 140:Bsp/Bsp_can.c **** 
 141:Bsp/Bsp_can.c ****   if ((rx_header.StdId >= MOTOR_3508_FEEDBACK_ID_BASE)
 361              		.loc 1 141 3 view .LVU107
 362              		.loc 1 141 17 is_stmt 0 view .LVU108
 363 0010 039B     		ldr	r3, [sp, #12]
 142:Bsp/Bsp_can.c ****    && (rx_header.StdId <  MOTOR_3508_FEEDBACK_ID_BASE + MOTOR_CHASSIS_MAX_NUM + MOTOR_GIMBAL_MAX_NU
 364              		.loc 1 142 4 view .LVU109
 365 0012 A3F50072 		sub	r2, r3, #512
 141:Bsp/Bsp_can.c ****    && (rx_header.StdId <  MOTOR_3508_FEEDBACK_ID_BASE + MOTOR_CHASSIS_MAX_NUM + MOTOR_GIMBAL_MAX_NU
 366              		.loc 1 141 6 view .LVU110
 367 0016 052A     		cmp	r2, #5
 368 0018 24D8     		bhi	.L14
 143:Bsp/Bsp_can.c ****   {
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s 			page 10


 144:Bsp/Bsp_can.c **** 
 145:Bsp/Bsp_can.c **** 	  index=rx_header.StdId - MOTOR_3508_FEEDBACK_ID_BASE;                  // get motor index by can_
 369              		.loc 1 145 4 is_stmt 1 view .LVU111
 370              		.loc 1 145 9 is_stmt 0 view .LVU112
 371 001a DCB2     		uxtb	r4, r3
 372              	.LVL22:
 146:Bsp/Bsp_can.c ****     motor_array[index].angle    = ((rx_data[0] << 8) | rx_data[1]);
 373              		.loc 1 146 5 is_stmt 1 view .LVU113
 374              		.loc 1 146 44 is_stmt 0 view .LVU114
 375 001c 9DF80410 		ldrb	r1, [sp, #4]	@ zero_extendqisi2
 376              		.loc 1 146 63 view .LVU115
 377 0020 9DF80500 		ldrb	r0, [sp, #5]	@ zero_extendqisi2
 378              		.loc 1 146 54 view .LVU116
 379 0024 40EA0120 		orr	r0, r0, r1, lsl #8
 380              		.loc 1 146 33 view .LVU117
 381 0028 2F49     		ldr	r1, .L19
 382 002a 04EB440E 		add	lr, r4, r4, lsl #1
 383 002e 01EB8E0C 		add	ip, r1, lr, lsl #2
 384 0032 21F82E00 		strh	r0, [r1, lr, lsl #2]	@ movhi
 147:Bsp/Bsp_can.c ****     motor_array[index].current_get    = ((rx_data[2] << 8) | rx_data[3]);
 385              		.loc 1 147 5 is_stmt 1 view .LVU118
 386              		.loc 1 147 50 is_stmt 0 view .LVU119
 387 0036 9DF806E0 		ldrb	lr, [sp, #6]	@ zero_extendqisi2
 388              		.loc 1 147 69 view .LVU120
 389 003a 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 390              		.loc 1 147 60 view .LVU121
 391 003e 40EA0E20 		orr	r0, r0, lr, lsl #8
 392              		.loc 1 147 39 view .LVU122
 393 0042 ACF80400 		strh	r0, [ip, #4]	@ movhi
 148:Bsp/Bsp_can.c ****     motor_array[index].current_set = ((rx_data[4] << 8) | rx_data[5]);
 394              		.loc 1 148 5 is_stmt 1 view .LVU123
 395              		.loc 1 148 47 is_stmt 0 view .LVU124
 396 0046 9DF808E0 		ldrb	lr, [sp, #8]	@ zero_extendqisi2
 397              		.loc 1 148 66 view .LVU125
 398 004a 9DF80900 		ldrb	r0, [sp, #9]	@ zero_extendqisi2
 399              		.loc 1 148 57 view .LVU126
 400 004e 40EA0E20 		orr	r0, r0, lr, lsl #8
 401              		.loc 1 148 36 view .LVU127
 402 0052 ACF80600 		strh	r0, [ip, #6]	@ movhi
 149:Bsp/Bsp_can.c ****     motor_array[index].hall           =   rx_data[6];
 403              		.loc 1 149 5 is_stmt 1 view .LVU128
 404              		.loc 1 149 50 is_stmt 0 view .LVU129
 405 0056 9DF80A00 		ldrb	r0, [sp, #10]	@ zero_extendqisi2
 406              		.loc 1 149 39 view .LVU130
 407 005a 04EB440C 		add	ip, r4, r4, lsl #1
 408 005e 01EB8C01 		add	r1, r1, ip, lsl #2
 409 0062 0872     		strb	r0, [r1, #8]
 410              	.LVL23:
 411              	.L14:
 150:Bsp/Bsp_can.c ****     
 151:Bsp/Bsp_can.c ****   }
 152:Bsp/Bsp_can.c **** 
 153:Bsp/Bsp_can.c ****   if ((rx_header.StdId >= MOTOR_3508_FEEDBACK_ID_BASE)
 412              		.loc 1 153 3 is_stmt 1 view .LVU131
 413              		.loc 1 153 6 is_stmt 0 view .LVU132
 414 0064 082A     		cmp	r2, #8
 415 0066 21D8     		bhi	.L15
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s 			page 11


 416              	.LBB3:
 154:Bsp/Bsp_can.c ****    && (rx_header.StdId <  MOTOR_3508_FEEDBACK_ID_BASE + MOTOR_MAX_NUM))                  // judge t
 155:Bsp/Bsp_can.c ****   {
 156:Bsp/Bsp_can.c ****     uint8_t index = rx_header.StdId - MOTOR_3508_FEEDBACK_ID_BASE;                  // get motor in
 417              		.loc 1 156 5 is_stmt 1 view .LVU133
 418              	.LVL24:
 157:Bsp/Bsp_can.c ****     motor_info[index].rotor_angle    = ((rx_data[0] << 8) | rx_data[1]);
 419              		.loc 1 157 5 view .LVU134
 420              		.loc 1 157 49 is_stmt 0 view .LVU135
 421 0068 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 422              		.loc 1 157 68 view .LVU136
 423 006c 9DF80500 		ldrb	r0, [sp, #5]	@ zero_extendqisi2
 424              		.loc 1 157 22 view .LVU137
 425 0070 DBB2     		uxtb	r3, r3
 426              		.loc 1 157 59 view .LVU138
 427 0072 40EA0220 		orr	r0, r0, r2, lsl #8
 428              		.loc 1 157 38 view .LVU139
 429 0076 1D49     		ldr	r1, .L19+4
 430 0078 03EB4302 		add	r2, r3, r3, lsl #1
 431 007c 01EB8202 		add	r2, r1, r2, lsl #2
 432 0080 9080     		strh	r0, [r2, #4]	@ movhi
 158:Bsp/Bsp_can.c ****     motor_info[index].rotor_speed    = ((rx_data[2] << 8) | rx_data[3]);
 433              		.loc 1 158 5 is_stmt 1 view .LVU140
 434              		.loc 1 158 49 is_stmt 0 view .LVU141
 435 0082 9DF806C0 		ldrb	ip, [sp, #6]	@ zero_extendqisi2
 436              		.loc 1 158 68 view .LVU142
 437 0086 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 438              		.loc 1 158 59 view .LVU143
 439 008a 40EA0C20 		orr	r0, r0, ip, lsl #8
 440              		.loc 1 158 38 view .LVU144
 441 008e D080     		strh	r0, [r2, #6]	@ movhi
 159:Bsp/Bsp_can.c ****     motor_info[index].torque_current = ((rx_data[4] << 8) | rx_data[5]);
 442              		.loc 1 159 5 is_stmt 1 view .LVU145
 443              		.loc 1 159 49 is_stmt 0 view .LVU146
 444 0090 9DF808C0 		ldrb	ip, [sp, #8]	@ zero_extendqisi2
 445              		.loc 1 159 68 view .LVU147
 446 0094 9DF80900 		ldrb	r0, [sp, #9]	@ zero_extendqisi2
 447              		.loc 1 159 59 view .LVU148
 448 0098 40EA0C20 		orr	r0, r0, ip, lsl #8
 449              		.loc 1 159 38 view .LVU149
 450 009c 1081     		strh	r0, [r2, #8]	@ movhi
 160:Bsp/Bsp_can.c ****     motor_info[index].temp           =   rx_data[6];
 451              		.loc 1 160 5 is_stmt 1 view .LVU150
 452              		.loc 1 160 49 is_stmt 0 view .LVU151
 453 009e 9DF80A20 		ldrb	r2, [sp, #10]	@ zero_extendqisi2
 454              		.loc 1 160 38 view .LVU152
 455 00a2 03EB4303 		add	r3, r3, r3, lsl #1
 456              	.LVL25:
 457              		.loc 1 160 38 view .LVU153
 458 00a6 01EB8301 		add	r1, r1, r3, lsl #2
 459 00aa 8A72     		strb	r2, [r1, #10]
 460              	.LVL26:
 461              	.L15:
 462              		.loc 1 160 38 view .LVU154
 463              	.LBE3:
 161:Bsp/Bsp_can.c ****   }
 162:Bsp/Bsp_can.c ****  
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s 			page 12


 163:Bsp/Bsp_can.c ****   index_check = index;
 464              		.loc 1 163 3 is_stmt 1 view .LVU155
 465              		.loc 1 163 15 is_stmt 0 view .LVU156
 466 00ac 104B     		ldr	r3, .L19+8
 467 00ae 1C60     		str	r4, [r3]
 164:Bsp/Bsp_can.c **** 
 165:Bsp/Bsp_can.c ****   if(index > 0 && index < 5)
 468              		.loc 1 165 3 is_stmt 1 view .LVU157
 469              		.loc 1 165 16 is_stmt 0 view .LVU158
 470 00b0 631E     		subs	r3, r4, #1
 471 00b2 DBB2     		uxtb	r3, r3
 472              		.loc 1 165 5 view .LVU159
 473 00b4 032B     		cmp	r3, #3
 474 00b6 01D9     		bls	.L18
 475              	.LVL27:
 476              	.L13:
 166:Bsp/Bsp_can.c ****   {
 167:Bsp/Bsp_can.c **** 	  Velocity_Calclate(index);
 168:Bsp/Bsp_can.c **** 
 169:Bsp/Bsp_can.c ****     Velocity_Filter[index] = Slid_avg_filter(&Slid_filter[index], Velocity[index]);
 170:Bsp/Bsp_can.c **** 
 171:Bsp/Bsp_can.c ****   }
 172:Bsp/Bsp_can.c **** 
 173:Bsp/Bsp_can.c **** 
 174:Bsp/Bsp_can.c **** }
 477              		.loc 1 174 1 view .LVU160
 478 00b8 0BB0     		add	sp, sp, #44
 479              	.LCFI9:
 480              		.cfi_remember_state
 481              		.cfi_def_cfa_offset 12
 482              		@ sp needed
 483 00ba 30BD     		pop	{r4, r5, pc}
 484              	.LVL28:
 485              	.L18:
 486              	.LCFI10:
 487              		.cfi_restore_state
 167:Bsp/Bsp_can.c **** 
 488              		.loc 1 167 4 is_stmt 1 view .LVU161
 489 00bc 2046     		mov	r0, r4
 490 00be FFF7FEFF 		bl	Velocity_Calclate
 491              	.LVL29:
 169:Bsp/Bsp_can.c **** 
 492              		.loc 1 169 5 view .LVU162
 169:Bsp/Bsp_can.c **** 
 493              		.loc 1 169 30 is_stmt 0 view .LVU163
 494 00c2 A500     		lsls	r5, r4, #2
 495 00c4 0B4B     		ldr	r3, .L19+12
 496 00c6 03EB8403 		add	r3, r3, r4, lsl #2
 497 00ca 04EB4404 		add	r4, r4, r4, lsl #1
 498              	.LVL30:
 169:Bsp/Bsp_can.c **** 
 499              		.loc 1 169 30 view .LVU164
 500 00ce 93ED000A 		vldr.32	s0, [r3]
 501 00d2 0948     		ldr	r0, .L19+16
 502 00d4 00EBC400 		add	r0, r0, r4, lsl #3
 503 00d8 FFF7FEFF 		bl	Slid_avg_filter
 504              	.LVL31:
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s 			page 13


 169:Bsp/Bsp_can.c **** 
 505              		.loc 1 169 28 view .LVU165
 506 00dc 074B     		ldr	r3, .L19+20
 507 00de 2B44     		add	r3, r3, r5
 508 00e0 83ED000A 		vstr.32	s0, [r3]
 509              		.loc 1 174 1 view .LVU166
 510 00e4 E8E7     		b	.L13
 511              	.L20:
 512 00e6 00BF     		.align	2
 513              	.L19:
 514 00e8 00000000 		.word	motor_array
 515 00ec 00000000 		.word	motor_info
 516 00f0 00000000 		.word	index_check
 517 00f4 00000000 		.word	Velocity
 518 00f8 00000000 		.word	Slid_filter
 519 00fc 00000000 		.word	Velocity_Filter
 520              		.cfi_endproc
 521              	.LFE136:
 523              		.section	.text.set_motor_value_CAN1,"ax",%progbits
 524              		.align	1
 525              		.global	set_motor_value_CAN1
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 530              	set_motor_value_CAN1:
 531              	.LVL32:
 532              	.LFB137:
 175:Bsp/Bsp_can.c **** 
 176:Bsp/Bsp_can.c **** 
 177:Bsp/Bsp_can.c **** void set_motor_value_CAN1(uint16_t tx_ID, int16_t v1, int16_t v2, int16_t v3, int16_t v4)
 178:Bsp/Bsp_can.c **** {
 533              		.loc 1 178 1 is_stmt 1 view -0
 534              		.cfi_startproc
 535              		@ args = 4, pretend = 0, frame = 32
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537              		.loc 1 178 1 is_stmt 0 view .LVU168
 538 0000 00B5     		push	{lr}
 539              	.LCFI11:
 540              		.cfi_def_cfa_offset 4
 541              		.cfi_offset 14, -4
 542 0002 89B0     		sub	sp, sp, #36
 543              	.LCFI12:
 544              		.cfi_def_cfa_offset 40
 545 0004 BDF928C0 		ldrsh	ip, [sp, #40]
 179:Bsp/Bsp_can.c ****   CAN_TxHeaderTypeDef tx_header;
 546              		.loc 1 179 3 is_stmt 1 view .LVU169
 180:Bsp/Bsp_can.c ****   uint8_t             tx_data[8];
 547              		.loc 1 180 3 view .LVU170
 181:Bsp/Bsp_can.c **** 
 182:Bsp/Bsp_can.c ****   tx_header.StdId = tx_ID;
 548              		.loc 1 182 3 view .LVU171
 549              		.loc 1 182 19 is_stmt 0 view .LVU172
 550 0008 0290     		str	r0, [sp, #8]
 183:Bsp/Bsp_can.c ****   tx_header.IDE   = CAN_ID_STD;
 551              		.loc 1 183 3 is_stmt 1 view .LVU173
 552              		.loc 1 183 19 is_stmt 0 view .LVU174
 553 000a 0020     		movs	r0, #0
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s 			page 14


 554              	.LVL33:
 555              		.loc 1 183 19 view .LVU175
 556 000c 0490     		str	r0, [sp, #16]
 184:Bsp/Bsp_can.c ****   tx_header.RTR   = CAN_RTR_DATA;
 557              		.loc 1 184 3 is_stmt 1 view .LVU176
 558              		.loc 1 184 19 is_stmt 0 view .LVU177
 559 000e 0590     		str	r0, [sp, #20]
 185:Bsp/Bsp_can.c ****   tx_header.DLC   = 8;
 560              		.loc 1 185 3 is_stmt 1 view .LVU178
 561              		.loc 1 185 19 is_stmt 0 view .LVU179
 562 0010 0820     		movs	r0, #8
 563 0012 0690     		str	r0, [sp, #24]
 186:Bsp/Bsp_can.c **** 
 187:Bsp/Bsp_can.c ****   tx_data[0] = (v1>>8)&0xff;
 564              		.loc 1 187 3 is_stmt 1 view .LVU180
 565              		.loc 1 187 14 is_stmt 0 view .LVU181
 566 0014 41FA00F0 		asr	r0, r1, r0
 567 0018 8DF80000 		strb	r0, [sp]
 188:Bsp/Bsp_can.c ****   tx_data[1] =    (v1)&0xff;
 568              		.loc 1 188 3 is_stmt 1 view .LVU182
 569              		.loc 1 188 14 is_stmt 0 view .LVU183
 570 001c 8DF80110 		strb	r1, [sp, #1]
 189:Bsp/Bsp_can.c ****   tx_data[2] = (v2>>8)&0xff;
 571              		.loc 1 189 3 is_stmt 1 view .LVU184
 572              		.loc 1 189 14 is_stmt 0 view .LVU185
 573 0020 1112     		asrs	r1, r2, #8
 574              	.LVL34:
 575              		.loc 1 189 14 view .LVU186
 576 0022 8DF80210 		strb	r1, [sp, #2]
 190:Bsp/Bsp_can.c ****   tx_data[3] =    (v2)&0xff;
 577              		.loc 1 190 3 is_stmt 1 view .LVU187
 578              		.loc 1 190 14 is_stmt 0 view .LVU188
 579 0026 8DF80320 		strb	r2, [sp, #3]
 191:Bsp/Bsp_can.c ****   tx_data[4] = (v3>>8)&0xff;
 580              		.loc 1 191 3 is_stmt 1 view .LVU189
 581              		.loc 1 191 14 is_stmt 0 view .LVU190
 582 002a 1A12     		asrs	r2, r3, #8
 583              	.LVL35:
 584              		.loc 1 191 14 view .LVU191
 585 002c 8DF80420 		strb	r2, [sp, #4]
 192:Bsp/Bsp_can.c ****   tx_data[5] =    (v3)&0xff;
 586              		.loc 1 192 3 is_stmt 1 view .LVU192
 587              		.loc 1 192 14 is_stmt 0 view .LVU193
 588 0030 8DF80530 		strb	r3, [sp, #5]
 193:Bsp/Bsp_can.c ****   tx_data[6] = (v4>>8)&0xff;
 589              		.loc 1 193 3 is_stmt 1 view .LVU194
 590              		.loc 1 193 14 is_stmt 0 view .LVU195
 591 0034 9DF92930 		ldrsb	r3, [sp, #41]
 592              	.LVL36:
 593              		.loc 1 193 14 view .LVU196
 594 0038 8DF80630 		strb	r3, [sp, #6]
 194:Bsp/Bsp_can.c ****   tx_data[7] =    (v4)&0xff;
 595              		.loc 1 194 3 is_stmt 1 view .LVU197
 596              		.loc 1 194 14 is_stmt 0 view .LVU198
 597 003c 8DF807C0 		strb	ip, [sp, #7]
 195:Bsp/Bsp_can.c ****   HAL_CAN_AddTxMessage(&hcan1, &tx_header, tx_data,(uint32_t*)CAN_TX_MAILBOX0);
 598              		.loc 1 195 3 is_stmt 1 view .LVU199
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s 			page 15


 599 0040 0123     		movs	r3, #1
 600 0042 6A46     		mov	r2, sp
 601 0044 02A9     		add	r1, sp, #8
 602 0046 0348     		ldr	r0, .L23
 603 0048 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 604              	.LVL37:
 196:Bsp/Bsp_can.c ****   
 197:Bsp/Bsp_can.c **** }
 605              		.loc 1 197 1 is_stmt 0 view .LVU200
 606 004c 09B0     		add	sp, sp, #36
 607              	.LCFI13:
 608              		.cfi_def_cfa_offset 4
 609              		@ sp needed
 610 004e 5DF804FB 		ldr	pc, [sp], #4
 611              	.LVL38:
 612              	.L24:
 613              		.loc 1 197 1 view .LVU201
 614 0052 00BF     		.align	2
 615              	.L23:
 616 0054 00000000 		.word	hcan1
 617              		.cfi_endproc
 618              	.LFE137:
 620              		.section	.text.set_motor_value_CAN2,"ax",%progbits
 621              		.align	1
 622              		.global	set_motor_value_CAN2
 623              		.syntax unified
 624              		.thumb
 625              		.thumb_func
 627              	set_motor_value_CAN2:
 628              	.LVL39:
 629              	.LFB138:
 198:Bsp/Bsp_can.c **** 
 199:Bsp/Bsp_can.c **** void set_motor_value_CAN2(uint16_t tx_ID, int16_t v1, int16_t v2, int16_t v3, int16_t v4)
 200:Bsp/Bsp_can.c **** {
 630              		.loc 1 200 1 is_stmt 1 view -0
 631              		.cfi_startproc
 632              		@ args = 4, pretend = 0, frame = 32
 633              		@ frame_needed = 0, uses_anonymous_args = 0
 634              		.loc 1 200 1 is_stmt 0 view .LVU203
 635 0000 00B5     		push	{lr}
 636              	.LCFI14:
 637              		.cfi_def_cfa_offset 4
 638              		.cfi_offset 14, -4
 639 0002 89B0     		sub	sp, sp, #36
 640              	.LCFI15:
 641              		.cfi_def_cfa_offset 40
 642 0004 BDF928C0 		ldrsh	ip, [sp, #40]
 201:Bsp/Bsp_can.c ****   CAN_TxHeaderTypeDef tx_header;
 643              		.loc 1 201 3 is_stmt 1 view .LVU204
 202:Bsp/Bsp_can.c ****   uint8_t             tx_data[8];
 644              		.loc 1 202 3 view .LVU205
 203:Bsp/Bsp_can.c **** 
 204:Bsp/Bsp_can.c ****   tx_header.StdId = tx_ID;
 645              		.loc 1 204 3 view .LVU206
 646              		.loc 1 204 19 is_stmt 0 view .LVU207
 647 0008 0290     		str	r0, [sp, #8]
 205:Bsp/Bsp_can.c ****   tx_header.IDE   = CAN_ID_STD;
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s 			page 16


 648              		.loc 1 205 3 is_stmt 1 view .LVU208
 649              		.loc 1 205 19 is_stmt 0 view .LVU209
 650 000a 0020     		movs	r0, #0
 651              	.LVL40:
 652              		.loc 1 205 19 view .LVU210
 653 000c 0490     		str	r0, [sp, #16]
 206:Bsp/Bsp_can.c ****   tx_header.RTR   = CAN_RTR_DATA;
 654              		.loc 1 206 3 is_stmt 1 view .LVU211
 655              		.loc 1 206 19 is_stmt 0 view .LVU212
 656 000e 0590     		str	r0, [sp, #20]
 207:Bsp/Bsp_can.c ****   tx_header.DLC   = 8;
 657              		.loc 1 207 3 is_stmt 1 view .LVU213
 658              		.loc 1 207 19 is_stmt 0 view .LVU214
 659 0010 0820     		movs	r0, #8
 660 0012 0690     		str	r0, [sp, #24]
 208:Bsp/Bsp_can.c **** 
 209:Bsp/Bsp_can.c ****   tx_data[0] = (v1>>8)&0xff;
 661              		.loc 1 209 3 is_stmt 1 view .LVU215
 662              		.loc 1 209 14 is_stmt 0 view .LVU216
 663 0014 41FA00F0 		asr	r0, r1, r0
 664 0018 8DF80000 		strb	r0, [sp]
 210:Bsp/Bsp_can.c ****   tx_data[1] =    (v1)&0xff;
 665              		.loc 1 210 3 is_stmt 1 view .LVU217
 666              		.loc 1 210 14 is_stmt 0 view .LVU218
 667 001c 8DF80110 		strb	r1, [sp, #1]
 211:Bsp/Bsp_can.c ****   tx_data[2] = (v2>>8)&0xff;
 668              		.loc 1 211 3 is_stmt 1 view .LVU219
 669              		.loc 1 211 14 is_stmt 0 view .LVU220
 670 0020 1112     		asrs	r1, r2, #8
 671              	.LVL41:
 672              		.loc 1 211 14 view .LVU221
 673 0022 8DF80210 		strb	r1, [sp, #2]
 212:Bsp/Bsp_can.c ****   tx_data[3] =    (v2)&0xff;
 674              		.loc 1 212 3 is_stmt 1 view .LVU222
 675              		.loc 1 212 14 is_stmt 0 view .LVU223
 676 0026 8DF80320 		strb	r2, [sp, #3]
 213:Bsp/Bsp_can.c ****   tx_data[4] = (v3>>8)&0xff;
 677              		.loc 1 213 3 is_stmt 1 view .LVU224
 678              		.loc 1 213 14 is_stmt 0 view .LVU225
 679 002a 1A12     		asrs	r2, r3, #8
 680              	.LVL42:
 681              		.loc 1 213 14 view .LVU226
 682 002c 8DF80420 		strb	r2, [sp, #4]
 214:Bsp/Bsp_can.c ****   tx_data[5] =    (v3)&0xff;
 683              		.loc 1 214 3 is_stmt 1 view .LVU227
 684              		.loc 1 214 14 is_stmt 0 view .LVU228
 685 0030 8DF80530 		strb	r3, [sp, #5]
 215:Bsp/Bsp_can.c ****   tx_data[6] = (v4>>8)&0xff;
 686              		.loc 1 215 3 is_stmt 1 view .LVU229
 687              		.loc 1 215 14 is_stmt 0 view .LVU230
 688 0034 9DF92930 		ldrsb	r3, [sp, #41]
 689              	.LVL43:
 690              		.loc 1 215 14 view .LVU231
 691 0038 8DF80630 		strb	r3, [sp, #6]
 216:Bsp/Bsp_can.c ****   tx_data[7] =    (v4)&0xff;
 692              		.loc 1 216 3 is_stmt 1 view .LVU232
 693              		.loc 1 216 14 is_stmt 0 view .LVU233
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s 			page 17


 694 003c 8DF807C0 		strb	ip, [sp, #7]
 217:Bsp/Bsp_can.c ****   HAL_CAN_AddTxMessage(&hcan2, &tx_header, tx_data,(uint32_t*)CAN_TX_MAILBOX0);
 695              		.loc 1 217 3 is_stmt 1 view .LVU234
 696 0040 0123     		movs	r3, #1
 697 0042 6A46     		mov	r2, sp
 698 0044 02A9     		add	r1, sp, #8
 699 0046 0348     		ldr	r0, .L27
 700 0048 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 701              	.LVL44:
 218:Bsp/Bsp_can.c ****   
 219:Bsp/Bsp_can.c **** }
 702              		.loc 1 219 1 is_stmt 0 view .LVU235
 703 004c 09B0     		add	sp, sp, #36
 704              	.LCFI16:
 705              		.cfi_def_cfa_offset 4
 706              		@ sp needed
 707 004e 5DF804FB 		ldr	pc, [sp], #4
 708              	.LVL45:
 709              	.L28:
 710              		.loc 1 219 1 view .LVU236
 711 0052 00BF     		.align	2
 712              	.L27:
 713 0054 00000000 		.word	hcan2
 714              		.cfi_endproc
 715              	.LFE138:
 717              		.global	count
 718              		.section	.bss.count,"aw",%nobits
 719              		.align	2
 722              	count:
 723 0000 00000000 		.space	12
 723      00000000 
 723      00000000 
 724              		.global	Velocity_Filter
 725              		.section	.bss.Velocity_Filter,"aw",%nobits
 726              		.align	2
 729              	Velocity_Filter:
 730 0000 00000000 		.space	20
 730      00000000 
 730      00000000 
 730      00000000 
 730      00000000 
 731              		.global	index_check
 732              		.section	.bss.index_check,"aw",%nobits
 733              		.align	2
 736              	index_check:
 737 0000 00000000 		.space	4
 738              		.global	motor_info
 739              		.section	.bss.motor_info,"aw",%nobits
 740              		.align	2
 743              	motor_info:
 744 0000 00000000 		.space	108
 744      00000000 
 744      00000000 
 744      00000000 
 744      00000000 
 745              		.global	motor_array
 746              		.section	.bss.motor_array,"aw",%nobits
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s 			page 18


 747              		.align	2
 750              	motor_array:
 751 0000 00000000 		.space	72
 751      00000000 
 751      00000000 
 751      00000000 
 751      00000000 
 752              		.text
 753              	.Letext0:
 754              		.file 2 "d:\\msys64\\mingw64\\arm-none-eabi\\include\\machine\\_default_types.h"
 755              		.file 3 "d:\\msys64\\mingw64\\arm-none-eabi\\include\\sys\\_stdint.h"
 756              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 757              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 758              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 759              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 760              		.file 8 "Core/Inc/can.h"
 761              		.file 9 "Bsp/Bsp_can.h"
 762              		.file 10 "Modules/DJImotor/djimotor.h"
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s 			page 19


DEFINED SYMBOLS
                            *ABS*:00000000 Bsp_can.c
C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s:21     .text.can_user_init:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s:27     .text.can_user_init:00000000 can_user_init
C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s:126    .text.can_user_init:00000058 $d
C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s:132    .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s:138    .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 HAL_CAN_RxFifo0MsgPendingCallback
C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s:318    .text.HAL_CAN_RxFifo0MsgPendingCallback:000000e8 $d
C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s:750    .bss.motor_array:00000000 motor_array
C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s:743    .bss.motor_info:00000000 motor_info
C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s:736    .bss.index_check:00000000 index_check
C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s:729    .bss.Velocity_Filter:00000000 Velocity_Filter
C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s:328    .text.HAL_CAN_RxFifo1MsgPendingCallback:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s:334    .text.HAL_CAN_RxFifo1MsgPendingCallback:00000000 HAL_CAN_RxFifo1MsgPendingCallback
C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s:514    .text.HAL_CAN_RxFifo1MsgPendingCallback:000000e8 $d
C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s:524    .text.set_motor_value_CAN1:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s:530    .text.set_motor_value_CAN1:00000000 set_motor_value_CAN1
C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s:616    .text.set_motor_value_CAN1:00000054 $d
C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s:621    .text.set_motor_value_CAN2:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s:627    .text.set_motor_value_CAN2:00000000 set_motor_value_CAN2
C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s:713    .text.set_motor_value_CAN2:00000054 $d
C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s:722    .bss.count:00000000 count
C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s:719    .bss.count:00000000 $d
C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s:726    .bss.Velocity_Filter:00000000 $d
C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s:733    .bss.index_check:00000000 $d
C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s:740    .bss.motor_info:00000000 $d
C:\Users\AURORA~1\AppData\Local\Temp\cc5h9IQm.s:747    .bss.motor_array:00000000 $d

UNDEFINED SYMBOLS
HAL_CAN_ConfigFilter
HAL_CAN_Start
HAL_CAN_ActivateNotification
hcan1
hcan2
HAL_CAN_GetRxMessage
Velocity_Calclate
Slid_avg_filter
Velocity
Slid_filter
HAL_CAN_AddTxMessage
