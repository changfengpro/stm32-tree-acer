ARM GAS  D:\msys64\tmp\cc7Z9ZTf.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"freertos.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/freertos.c"
  20              		.section	.text.StartDefaultTask,"ax",%progbits
  21              		.align	1
  22              		.global	StartDefaultTask
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	StartDefaultTask:
  28              	.LFB139:
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** #include "cmsis_os.h"
  25:Core/Src/freertos.c **** 
  26:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/freertos.c **** #include "bmi088.h"
  29:Core/Src/freertos.c **** /* USER CODE END Includes */
  30:Core/Src/freertos.c **** 
ARM GAS  D:\msys64\tmp\cc7Z9ZTf.s 			page 2


  31:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/freertos.c **** 
  34:Core/Src/freertos.c **** /* USER CODE END PTD */
  35:Core/Src/freertos.c **** 
  36:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  38:Core/Src/freertos.c **** 
  39:Core/Src/freertos.c **** /* USER CODE END PD */
  40:Core/Src/freertos.c **** 
  41:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  43:Core/Src/freertos.c **** 
  44:Core/Src/freertos.c **** /* USER CODE END PM */
  45:Core/Src/freertos.c **** 
  46:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  48:Core/Src/freertos.c **** 
  49:Core/Src/freertos.c **** /* USER CODE END Variables */
  50:Core/Src/freertos.c **** /* Definitions for defaultTask */
  51:Core/Src/freertos.c **** osThreadId_t defaultTaskHandle;
  52:Core/Src/freertos.c **** const osThreadAttr_t defaultTask_attributes = {
  53:Core/Src/freertos.c ****   .name = "defaultTask",
  54:Core/Src/freertos.c ****   .stack_size = 128 * 4,
  55:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityNormal,
  56:Core/Src/freertos.c **** };
  57:Core/Src/freertos.c **** 
  58:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  59:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  60:Core/Src/freertos.c **** osThreadId_t BMI088TaskHandle;
  61:Core/Src/freertos.c **** const osThreadAttr_t BMI088Task_attributes = {
  62:Core/Src/freertos.c ****   .name = "BMI088Task",
  63:Core/Src/freertos.c ****   .stack_size = 128 * 4,
  64:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityAboveNormal,
  65:Core/Src/freertos.c **** };
  66:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  67:Core/Src/freertos.c **** 
  68:Core/Src/freertos.c **** void StartDefaultTask(void *argument);
  69:Core/Src/freertos.c **** void StartBMI088Task(void *argumen);
  70:Core/Src/freertos.c **** 
  71:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  72:Core/Src/freertos.c **** 
  73:Core/Src/freertos.c **** /**
  74:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
  75:Core/Src/freertos.c ****   * @param  None
  76:Core/Src/freertos.c ****   * @retval None
  77:Core/Src/freertos.c ****   */
  78:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
  79:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
  80:Core/Src/freertos.c **** 
  81:Core/Src/freertos.c ****   /* USER CODE END Init */
  82:Core/Src/freertos.c **** 
  83:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
  84:Core/Src/freertos.c ****   /* add mutexes, ... */
  85:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
  86:Core/Src/freertos.c **** 
  87:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
ARM GAS  D:\msys64\tmp\cc7Z9ZTf.s 			page 3


  88:Core/Src/freertos.c ****   /* add semaphores, ... */
  89:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
  90:Core/Src/freertos.c **** 
  91:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
  92:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
  93:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
  94:Core/Src/freertos.c **** 
  95:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
  96:Core/Src/freertos.c ****   /* add queues, ... */
  97:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
  98:Core/Src/freertos.c **** 
  99:Core/Src/freertos.c ****   /* Create the thread(s) */
 100:Core/Src/freertos.c ****   /* creation of defaultTask */
 101:Core/Src/freertos.c ****   defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 102:Core/Src/freertos.c ****   BMI088TaskHandle = osThreadNew(StartBMI088Task, NULL, &BMI088Task_attributes);
 103:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 104:Core/Src/freertos.c ****   /* add threads, ... */
 105:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 106:Core/Src/freertos.c **** 
 107:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 108:Core/Src/freertos.c ****   /* add events, ... */
 109:Core/Src/freertos.c ****   /* USER CODE END RTOS_EVENTS */
 110:Core/Src/freertos.c **** 
 111:Core/Src/freertos.c **** }
 112:Core/Src/freertos.c **** 
 113:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 114:Core/Src/freertos.c **** /**
 115:Core/Src/freertos.c ****   * @brief  Function implementing the defaultTask thread.
 116:Core/Src/freertos.c ****   * @param  argument: Not used
 117:Core/Src/freertos.c ****   * @retval None
 118:Core/Src/freertos.c ****   */
 119:Core/Src/freertos.c **** /* USER CODE END Header_StartDefaultTask */
 120:Core/Src/freertos.c **** void StartDefaultTask(void *argument)
 121:Core/Src/freertos.c **** {
  29              		.loc 1 121 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LVL0:
  36              	.L2:
 122:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
 123:Core/Src/freertos.c ****     
 124:Core/Src/freertos.c ****     //vTaskDelete(NULL);
 125:Core/Src/freertos.c ****   /* Infinite loop */
 126:Core/Src/freertos.c ****   for(;;)
  37              		.loc 1 126 3 view .LVU1
 127:Core/Src/freertos.c ****   {
 128:Core/Src/freertos.c ****     
 129:Core/Src/freertos.c ****   }
  38              		.loc 1 129 3 view .LVU2
 126:Core/Src/freertos.c ****   {
  39              		.loc 1 126 3 view .LVU3
  40 0000 FEE7     		b	.L2
  41              		.cfi_endproc
  42              	.LFE139:
ARM GAS  D:\msys64\tmp\cc7Z9ZTf.s 			page 4


  44              		.section	.text.StartBMI088Task,"ax",%progbits
  45              		.align	1
  46              		.global	StartBMI088Task
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  51              	StartBMI088Task:
  52              	.LVL1:
  53              	.LFB140:
 130:Core/Src/freertos.c ****   /* USER CODE END StartDefaultTask */
 131:Core/Src/freertos.c **** }
 132:Core/Src/freertos.c **** 
 133:Core/Src/freertos.c **** /* Private application code --------------------------------------------------*/
 134:Core/Src/freertos.c **** /* USER CODE BEGIN Application */
 135:Core/Src/freertos.c **** void StartBMI088Task(void *argumen)
 136:Core/Src/freertos.c **** {
  54              		.loc 1 136 1 view -0
  55              		.cfi_startproc
  56              		@ Volatile: function does not return.
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		.loc 1 136 1 is_stmt 0 view .LVU5
  60 0000 08B5     		push	{r3, lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 3, -8
  64              		.cfi_offset 14, -4
 137:Core/Src/freertos.c ****     BMI088_Accel_Init();
  65              		.loc 1 137 5 is_stmt 1 view .LVU6
  66 0002 FFF7FEFF 		bl	BMI088_Accel_Init
  67              	.LVL2:
 138:Core/Src/freertos.c ****     BMI088_Gyro_Init();
  68              		.loc 1 138 5 view .LVU7
  69 0006 FFF7FEFF 		bl	BMI088_Gyro_Init
  70              	.LVL3:
  71              	.L4:
 139:Core/Src/freertos.c ****   for(;;)
  72              		.loc 1 139 3 view .LVU8
 140:Core/Src/freertos.c ****   {
 141:Core/Src/freertos.c ****     BMI088_Accel_Read();
  73              		.loc 1 141 5 view .LVU9
  74 000a FFF7FEFF 		bl	BMI088_Accel_Read
  75              	.LVL4:
 142:Core/Src/freertos.c ****     BMI088_Gyro_Read();
  76              		.loc 1 142 5 view .LVU10
  77 000e FFF7FEFF 		bl	BMI088_Gyro_Read
  78              	.LVL5:
 143:Core/Src/freertos.c ****     osDelay(1);
  79              		.loc 1 143 5 discriminator 1 view .LVU11
  80 0012 0120     		movs	r0, #1
  81 0014 FFF7FEFF 		bl	osDelay
  82              	.LVL6:
 139:Core/Src/freertos.c ****   {
  83              		.loc 1 139 3 view .LVU12
  84 0018 F7E7     		b	.L4
  85              		.cfi_endproc
  86              	.LFE140:
ARM GAS  D:\msys64\tmp\cc7Z9ZTf.s 			page 5


  88              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
  89              		.align	1
  90              		.global	MX_FREERTOS_Init
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  95              	MX_FREERTOS_Init:
  96              	.LFB138:
  78:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
  97              		.loc 1 78 29 view -0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101 0000 08B5     		push	{r3, lr}
 102              	.LCFI1:
 103              		.cfi_def_cfa_offset 8
 104              		.cfi_offset 3, -8
 105              		.cfi_offset 14, -4
 101:Core/Src/freertos.c ****   BMI088TaskHandle = osThreadNew(StartBMI088Task, NULL, &BMI088Task_attributes);
 106              		.loc 1 101 3 view .LVU14
 101:Core/Src/freertos.c ****   BMI088TaskHandle = osThreadNew(StartBMI088Task, NULL, &BMI088Task_attributes);
 107              		.loc 1 101 23 is_stmt 0 view .LVU15
 108 0002 074A     		ldr	r2, .L8
 109 0004 0021     		movs	r1, #0
 110 0006 0748     		ldr	r0, .L8+4
 111 0008 FFF7FEFF 		bl	osThreadNew
 112              	.LVL7:
 101:Core/Src/freertos.c ****   BMI088TaskHandle = osThreadNew(StartBMI088Task, NULL, &BMI088Task_attributes);
 113              		.loc 1 101 21 discriminator 1 view .LVU16
 114 000c 064B     		ldr	r3, .L8+8
 115 000e 1860     		str	r0, [r3]
 102:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 116              		.loc 1 102 3 is_stmt 1 view .LVU17
 102:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 117              		.loc 1 102 22 is_stmt 0 view .LVU18
 118 0010 064A     		ldr	r2, .L8+12
 119 0012 0021     		movs	r1, #0
 120 0014 0648     		ldr	r0, .L8+16
 121 0016 FFF7FEFF 		bl	osThreadNew
 122              	.LVL8:
 102:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 123              		.loc 1 102 20 discriminator 1 view .LVU19
 124 001a 064B     		ldr	r3, .L8+20
 125 001c 1860     		str	r0, [r3]
 111:Core/Src/freertos.c **** 
 126              		.loc 1 111 1 view .LVU20
 127 001e 08BD     		pop	{r3, pc}
 128              	.L9:
 129              		.align	2
 130              	.L8:
 131 0020 00000000 		.word	defaultTask_attributes
 132 0024 00000000 		.word	StartDefaultTask
 133 0028 00000000 		.word	defaultTaskHandle
 134 002c 00000000 		.word	BMI088Task_attributes
 135 0030 00000000 		.word	StartBMI088Task
 136 0034 00000000 		.word	BMI088TaskHandle
 137              		.cfi_endproc
ARM GAS  D:\msys64\tmp\cc7Z9ZTf.s 			page 6


 138              	.LFE138:
 140              		.global	BMI088Task_attributes
 141              		.section	.rodata.str1.4,"aMS",%progbits,1
 142              		.align	2
 143              	.LC0:
 144 0000 424D4930 		.ascii	"BMI088Task\000"
 144      38385461 
 144      736B00
 145              		.section	.rodata.BMI088Task_attributes,"a"
 146              		.align	2
 149              	BMI088Task_attributes:
 150 0000 00000000 		.word	.LC0
 151 0004 00000000 		.space	16
 151      00000000 
 151      00000000 
 151      00000000 
 152 0014 00020000 		.word	512
 153 0018 20000000 		.word	32
 154 001c 00000000 		.space	8
 154      00000000 
 155              		.global	BMI088TaskHandle
 156              		.section	.bss.BMI088TaskHandle,"aw",%nobits
 157              		.align	2
 160              	BMI088TaskHandle:
 161 0000 00000000 		.space	4
 162              		.global	defaultTask_attributes
 163              		.section	.rodata.str1.4
 164 000b 00       		.align	2
 165              	.LC1:
 166 000c 64656661 		.ascii	"defaultTask\000"
 166      756C7454 
 166      61736B00 
 167              		.section	.rodata.defaultTask_attributes,"a"
 168              		.align	2
 171              	defaultTask_attributes:
 172 0000 0C000000 		.word	.LC1
 173 0004 00000000 		.space	16
 173      00000000 
 173      00000000 
 173      00000000 
 174 0014 00020000 		.word	512
 175 0018 18000000 		.word	24
 176 001c 00000000 		.space	8
 176      00000000 
 177              		.global	defaultTaskHandle
 178              		.section	.bss.defaultTaskHandle,"aw",%nobits
 179              		.align	2
 182              	defaultTaskHandle:
 183 0000 00000000 		.space	4
 184              		.text
 185              	.Letext0:
 186              		.file 2 "D:/msys64/mingw64/arm-none-eabi/include/machine/_default_types.h"
 187              		.file 3 "D:/msys64/mingw64/arm-none-eabi/include/sys/_stdint.h"
 188              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 189              		.file 5 "BMI088/bmi088.h"
ARM GAS  D:\msys64\tmp\cc7Z9ZTf.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 freertos.c
D:\msys64\tmp\cc7Z9ZTf.s:21     .text.StartDefaultTask:00000000 $t
D:\msys64\tmp\cc7Z9ZTf.s:27     .text.StartDefaultTask:00000000 StartDefaultTask
D:\msys64\tmp\cc7Z9ZTf.s:45     .text.StartBMI088Task:00000000 $t
D:\msys64\tmp\cc7Z9ZTf.s:51     .text.StartBMI088Task:00000000 StartBMI088Task
D:\msys64\tmp\cc7Z9ZTf.s:89     .text.MX_FREERTOS_Init:00000000 $t
D:\msys64\tmp\cc7Z9ZTf.s:95     .text.MX_FREERTOS_Init:00000000 MX_FREERTOS_Init
D:\msys64\tmp\cc7Z9ZTf.s:131    .text.MX_FREERTOS_Init:00000020 $d
D:\msys64\tmp\cc7Z9ZTf.s:171    .rodata.defaultTask_attributes:00000000 defaultTask_attributes
D:\msys64\tmp\cc7Z9ZTf.s:182    .bss.defaultTaskHandle:00000000 defaultTaskHandle
D:\msys64\tmp\cc7Z9ZTf.s:149    .rodata.BMI088Task_attributes:00000000 BMI088Task_attributes
D:\msys64\tmp\cc7Z9ZTf.s:160    .bss.BMI088TaskHandle:00000000 BMI088TaskHandle
D:\msys64\tmp\cc7Z9ZTf.s:142    .rodata.str1.4:00000000 $d
D:\msys64\tmp\cc7Z9ZTf.s:146    .rodata.BMI088Task_attributes:00000000 $d
D:\msys64\tmp\cc7Z9ZTf.s:157    .bss.BMI088TaskHandle:00000000 $d
D:\msys64\tmp\cc7Z9ZTf.s:168    .rodata.defaultTask_attributes:00000000 $d
D:\msys64\tmp\cc7Z9ZTf.s:179    .bss.defaultTaskHandle:00000000 $d

UNDEFINED SYMBOLS
BMI088_Accel_Init
BMI088_Gyro_Init
BMI088_Accel_Read
BMI088_Gyro_Read
osDelay
osThreadNew
